	$Id$
	
	----------------------------------------------------------------
	Frequently Asked Questions and general information about gPhoto.

			http://www.gphoto.org/

	----------------------------------------------------------------

	$Log$
	Revision 1.2  1999/05/28 13:29:49  phillh
	*** empty log message ***

	Revision 1.1.1.1  1999/05/27 18:32:01  scottf
	gPhoto- digital camera utility
	
	Revision 1.10  1999/05/09 16:06:53  ole
	Minor changes.
	
	Revision 1.9  1999/05/09 15:51:11  ole
	General update.
	
	Revision 1.8  1999/05/05 19:46:25  ole
	Initial revision

1.0.	General information
1.1.	What is GNU Photo/gPhoto?
1.2.	How can digital photography help me? 
1.3.	How long will I have to wait to see the digital pictures I shot?
1.4.	Which digital camera should I buy?  Which models do gPhoto support?
1.5.	What hardware and operating systems will gPhoto compile and run on?
1.6.	What libraries and system files does gPhoto require?
1.7.	Will gPhoto run on my system, without GNOME installed?
1.8.	Can gPhoto interoperate with other programs, like GIMP?
1.9.	What is the current version of gPhoto?

2.0.	Installation
2.1.	Where do I download the latest gPhoto developer archive from?
2.2.	How do I unarchive and compile the gPhoto source archive?
2.3.	How do I install the gPhoto binary onto my system?
2.4.	I get "Could not open camera".  How do I configure the serial port?
2.5.    I get "gphoto: error in loading shared libraries"
2.6.    I get "ld: cannot open -lgdk_imlib: No such file or directory".

3.0.	Using your digital camera with gPhoto
3.1.	How do I take a picture and get a good result?
3.2.	How do I download all the camera thumbnails, to pick images?
3.3.	How do I download one (or more) specific image(s) from the camera?
3.4.	How do I view/save the downloaded image?
3.5.	How do I delete/(un)select one specific images located in the camera?
3.6.	How do I configure the camera?
3.7.	How do I print images?
3.8.	How do I use the gPhoto command line interface?  How can I use it?
3.9.	How do I download all the images in the camera to disk?

4.0.	GNU Photo/gPhoto developements
4.1.	Who has developed gPhoto?
4.2.	How do I write a gPhoto-supported plugin or new model interfaces?
4.3.	How do I organize a HTML gallery theme?
4.4.	What are the future plans for GNU Photo/gPhoto?
4.5.	Does gPhoto aim to be GNOME compliant?
4.6.	gPhoto is great! You could earn real money! But why is it *free*?

	----------------------------------------------------------------

1.0.	General information

1.1.	What is GNU Photo/gPhoto?

	The GNU Photo project aim to develope software for digital cameras.

	gPhoto is one specific GTK+ application for retrieving, organizing,
	and publishing images in various graphics formats, from a range of
	supported digital cameras, see http://www.gphoto.org/cameras.php3
	for a complete list.

        gPhoto also has a command line interface.  The command line mode 
	is handy, if you want to set up a web camera, and use gphoto in a
	script, e.g. with Perl/PHP.

	gPhoto aims to be the ultimate and universal free GNU application to 
	get, organize, and publish pictures from any digital still camera.

	gPhoto is now in CVS, and this has speeded up library development!
	See 2.1 in the FAQ and http://www.gphoto.org/?cvs for details.

1.2.	How can digital photography help me? 

	Digital photography is, to put it simply, photography without
	film.  With traditional photography you will have to wait for
	Polaroids, then you have to wait for the film to be developed,
	then you have to wait for the color separations, not to mention
	all of the messengers between all those stops.  That's a lot of
	time and money being spent.  Now you can publish digital images
	that was shot only seconds ago, by uploading them to a web page.

1.3.	How long will I have to wait to see the digital pictures I shot?

	When you shoot digital, there is no waiting.  When you capture a
	digital image, it appears in seconds on the screen, no Polaroid
	to wait for.  You can drop it into your layout, check the crop and
	composition and make changes realtime.  After you are satisfied 
	that the image is perfect, you download the image with gPhoto.

	A full quality download usually take about 2-5 secs with gPhoto,
	so there is no nail-biting wait for the film to come out of 
	"the lab".

	Some digital still cameras have an LCD display which allows the
	preview of pictures you have already taken.  Then you know you 
	have the shot right then and there, and may also delete images.

	This feature needs a lot of camera battery, so many avoid to use it.
	NiMH batteries last longer in high-drain devices like digital cameras,
	than e.g. NiCd batteries, do not suffer from the "memory effect", and 
	do not contain environmentally damaging Cadmium.  New NiMH batteries
	require specially designed chargers for Nickel Metal Hydride batteries.

1.4.	Which digital camera should I buy?  Which models do gPhoto support?

	Probably the hardest decision you will have to make is which camera, 
	you will buy.  While some expensive ones come with more resolution,
	they do have tradeoffs.  Most cameras are fantastic, making it a
	tough decision to choose which camera to buy.

	Kodak and Minolta both provide specifications openly for their cameras
	meaning drivers for them can be written openly. Konica has recently
	started work on a GPL aplication for BSD/Linux which Phill will
	incorporate into gPhoto extending the current Konica driver.
	It is always a great help for potential camera customers to pressure
	companies into support our work BEFORE you give them your money.
	Many companies simply don't have time to look at the issues involved
	unless there is an financial incentive to do so. The more open we can
	make them, the better gPhoto can be and the more enjoyment you'll get
	from your camera. The file "CONTACTS" contains a list of company
	members who you can write to asking for GPL drivers or open
	specifications. There is a sample letter in "LETTER". Please adjust it
	slightly before sending it. 100 copies of one letter is not as
	persuasive as 25 different ones.

	OK, on with the show... In general, less expensive cameras are usually
	much better suited for "general" purpose work.  This is not to say
	these cameras are not for professionals.  It is simply to say that they 	are better suited to the jobs where you need to get a high quality
	snapshot, but don't need extremely high resolution prints.  A good
	example is using a camera for web pages photos, or for doing family
	prints (5x7).  For web pages, the 1024x768 size is a manageable size
	which can be resampled to useable sizes (ie. 320x240, etc.) 1280x1024
	would be overkill here.  Also, the 1024x768 has proven to be more than
	adequate to print photo quality 5x7 prints using a color printer.  

	Additionally, some cameras have a higher ISO equivalency (ISO 180), 
	which means they take better low light photos.  

	The expensive ones are more suited towards more sensitive work, 
	where the resolution makes perfect sense.  The biggest advantage of 
	the extra resolution is that e.g. 1280x1024 is the perfect size to 
	do high quality 8x10 prints.  Graphics professionals will also find 
	the extra resolution gives them more detail to work with.  However, 
	all this extra resolution comes at a cost of having a lower ISO rating
	(ISO 100).  Lighting needs to be more than adequate or you will have 
	to manual step up the exposure.  While most photographers will find 
	this to be no impediment, if you are a casual user, or used to doing 
	work with a point-and-shoot camera, you will mostly likely be 
	disappointed with your indoor shots.  

	Unless you really need the resolution, the cheaper alternative make 
	a better choice for an all purpose high-end digital camera.  The 
	results are very good, even at 8x10.  However, if you are constantly 
	doing 8x10 prints, or require a very detailed image, the expensive 
	cameras are probabaly your best shot.

	The higher resolution of the images allows them to be cropped 
	substantially.  The cropped images still have high enough resolution 
	for many purposes, and resolution superior to many other digital 
	cameras.  The cropped images also are effectively made with a longer 
	focal length than if they were not cropped. 

	Eventually, make sure that you buy some camera model that gPhoto 
	supports, allthough we've planned support for more cameras.  :-)

	List of supported models: http://www.gphoto.org/cameras.php3
	
1.5.	What hardware and operating systems will gPhoto compile and run on?
	
	The preferred OS and HW platform of the gPhoto developers is GNU/Linux.
	Most of the gPhoto developers run either RedHat 5.x/6.0, or Debian 2.x.
	We've had reports that gPhoto compiles and runs on the SuSE, FreeBSD,
	NetBSD, and Sun's proprietary, non-free operating system Solaris.

1.6.	What libraries and system files does gPhoto require?

	gPhoto requires the following innstalled:

	- The GNU C Compiler, the free compiler for the GNU system.
	  http://www.gnu.org/software/gcc/gcc.html
	- GNU Utils (sed)
          http://www.gnu.org/software/sed/sed.html
	- GTK+ 1.0+
	  http://www.gtk.org/
	- ImageMagick 4.1+ (Not _needed_ but Imlib uses it)
	- imlib 1.4+ (incl. libjpeg/libpng/libtiff/libz/libungif)
	  ftp://ftp.labs.redhat.com/pub/imlib/
	
1.7.	Will gPhoto run on my system, without GNOME installed?

	Yes, at the moment gPhoto doesn't require gnome-core libs.

1.8.	Can gPhoto interoperate with other programs, like GIMP?

	Yes, it will be able to spawn GIMP as an external editor.
	gPhoto saves in all the image formats that imlib supports,
	e.g. JPEG, PNG, TIFF, and GIF.
	
1.9.	What is the current version of gPhoto?

        The current developer version in CVS.  See http://www.gphoto.org/

	There's an official gPhoto page at the Free Software Foundation's
	web site: http://www.gnu.org/software/gphoto/gphoto.html

	There is also three gPhoto mailinglist, gphoto (general/announce),
	gphoto-devel (discussion), gphoto-kodak (kodak library discussion)

	http://lists.styx.net/mailman/listinfo/gphoto/
	http://lists.styx.net/mailman/listinfo/gphoto-devel/
	http://lists.styx.net/mailman/listinfo/gphoto-kodak/

	Check out the development news at http://www.gphoto.org/?news

	--------------------------------------------------------------

2.0.	Installation

2.1.	Where do I download the latest gPhoto developer archive from?

        gPhoto is now in CVS.  See http://www.gphoto.org/?cvs for more
	details on CVS, and how to get developer access to the CVS
	server.

        Users may want to just grab CVS source code as tar-ball from

	        http://www.gphoto.org/pub/snap/

	or checkout the latest gPhoto sources using anonymous CVS.

	In the latter case, you should follow these simple steps:

	First you need to setup the CVS environmental variables.  You
	might want to put this in your login script.

	export CVSROOT=':pserver:anon@www.freespeech.com:/home/del/cvssrc'

	Then use CVS as normal like this:

	$ cvs login
	The password for the 'anon' user is simply 'gphoto'.

	$ cvs -z3 checkout GPhoto
	Please use the -z3 option to minimize network bandwidth (-z9 eats
	too much CPU time - please don't use it).

	Now you will want to go through and build and install gPhoto:

	$ cd GPhoto/src
	$ make && make install
     
	After you have checked the code out, you can use:

	$ cvs -z3 update GPhoto

	to update your personal copy of gPhoto to the latest version 
	from the CVS server and rebuild.

2.2.	How do I unarchive and compile the gPhoto CVS source tar-ball?

	Type

	$ tar zxfv gphoto-1999xxxx.tgz
	$ cd GPhoto/
	$ make
	$ src/gphoto

2.3.	How do I install the gPhoto binary onto my system?
   
	In the gphoto-cvs directory:

	$ make install

	This installs the binary, gPhoto libraries, and the default theme.
	
2.4.	I get "Could not open camera".  How do I configure the serial port?

	To those of you who get "Could not open camera", and your camera is 
	reported to work on the list, see http://www.gphoto.org/cameras.html
        please try this, before you report it as a bug:

	Under GNU/Linux each serial port may have TWO names:

		/dev/cua0
		/dev/ttyS0

	and

		/dev/cua1
		/dev/ttyS1

	If you are using a serial mouse, it is probably on cua0 or ttyS0,
	so you are probably connecting your camera to cua1 or ttyS1.
	/dev/<serial_device> is the correct serial port (ttyS0 or ttyS1).

	[/root]# ls -l /dev/<serial_device>

	Make sure your camera is connected to the correct port and turned on.

	For now, you either need to be root to use gPhoto (because you 
	need to open a serial device) or you can create a "serial_dev" 
	group in /etc/group

	(It's usually wise to backup /etc/group, just in case.)

		[/root]# cp /etc/group /etc/group.old

	If your user is john_doe, then add a new, unique entry in /etc/group:

		[/root]# echo "serial_dev:x:234:john_doe" >> /etc/group

	Make sure your new serial_dev group owns /dev/<serial_device>

		[/root]# chgrp serial_dev /dev/<serial_device>

	Give rw (read/write) permissions to the serial device to that group.

		[/root]# chmod g+rw /dev/<serial_device>

	If it still doesn't work, check the group permissions:

		[/root]# ls -l /dev/ttyS0
		[/root]# ls -l /dev/ttyS1
		[/root]# ls -l /dev/<serial_device>
	
2.5.    I get "gphoto: error in loading shared libraries"

	Make sure that you've got required/unique versions of libraries.

	[/root]# ldconfig -v |grep imlib
	[/root]# ldconfig -v |grep gtk
	[/root]# ldconfig -v |grep imlib

2.6.    I get "ld: cannot open -lgdk_imlib: No such file or directory".

	Make sure that imlib is installed.

	[/root]# ldconfig -v |grep imlib
	        libgdk_imlib.so.1 => libgdk_imlib.so.1.8.1

	See http://www.labs.redhat.com/imlib/

	--------------------------------------------------------------

3.0.	Using your digital camera with gPhoto

	To get the best result, you'll need to exercise some basic photography 
	rules.  The same basic rules apply, regardless of whether you have a 
	$5000 SLR film camera, or a $200 digital camera. 

3.1.	How do I take a picture and get a good result?

	Three concepts that you should consider:

	1. Auto Focus - Even the best AF camera on the market (and we're not 
	going to start and argument as to who's is best) have limits... 
	Some are sensitive to the information in the frame, and need to have
	vertical or horizontal lines (or both) to focus on.  All (as far as we 
	know) have limitations on the minimum light level that AF will work 
	(and this is affected by actual light level as well as the light 
	reaching the AF sensors, which can be limited by aperture.) That's 
	why AF SLRs have a manual focus mode! 

	2. Auto Exposure - All auto exposure systems need a reference. 
	For traditional film cameras, the metering is set to properly expose 
	an 18% gray.  If you point even the best 35mm camera at a black card, 
	an 18% gray card and a white card, and let the AE do its stuff, it 
	will try to make the cards all look like 18% gray, and all will come 
	out looking about the same.  If you do the same thing, but use an 
	incident light meter to set the exposure (reading actual light levels 
	rather than light reflected off of the subject), then they will come 
	out black, gray and white, respectively.

	3. Blurry photos (not necessarily AF related) - It seems that most 
	of the blurry photos you see on the web are ambient light shots (no 
	flash).  It is important to remember that digital cameras are rated at 
	a fairly slow ASA (ISO) equivalent.

3.2.	How do I download all the camera thumbnails, to pick images?

	Choose "Get index" / "Get Empty Index" (faster) from "Camera" menu.
   
3.3.	How do I download one (or more) specific image(s) from the camera?

	Select one or more thumbnail that is displayed in the gPhoto window.
	Then choose "Get selected images", from the "Camera" menu.

	To download all the images from the camera memory, choose "Select all"
	from the "Edit" menu, then "Get selected images" from the "Camera" 
	menu.

3.4.	How do I view/save the downloaded image?

	Click on the image tab that has the camera numeric name of the image. 
	rigth next to the "Image Index" tab.

	To save the image, click on the "Save" entry in the "File" menu.
	The filerequester prompts you for a file name to save the image as.

3.5.	How do I delete/(un)select one specific images located in the camera?

	Click on one or more thumbnails that you want to delete, or; to clear
	the entire camera memory, choose "Select all" from the "Edit" menu.
	Choose "Delete selected images" from the "Camera" menu to delete them.

3.6.	How do I configure the camera?

	Select "Configure" from the camera menu.

3.7.	How do I print images?

	Try "Print" on the "File" menu.

3.8.	How do I use the gPhoto command line interface?  How can I use it?

        After building the gPhoto binary, type "gphoto -h" for 
        command-line options.  Here's the low-down:

	GNU Photo v.0.$
	Usage: gphoto [-h] [-n] [-s # filename] [-t # filename]
	              [-d #] [-l filename]
	        -n                      display the # of pictures
	        -s # filename           save image # as filename
	        -t # filename           save thumbnail # as filename
	        -d #                    delete image # from camera
	        -l filename             save live preview as filename
	        -h                      display this help screen 

	Only catch is you MUST run gphoto in graphical mode to initially
	set the camera library before running in command-line mode.

        The command line mode is handy, if you want to set up a
        web camera, and use gphoto in a script, e.g. with Perl/PHP.

        Web-cam example:
                
        $ gphoto -l /home/httpd/html/livepic.jpg

	A simple script set up can automate a lot of things (batch saving,
	webcam, delete all pics, etc..) - please send in your scripts. :-)

3.9.	How do I download all the images in the camera to disk?

	Choose "Batch save" on the "File" menu, and then chose or make
	a directory, where you can save each image.
	
	A batch file prefix string allows you to type in "graduation" 
	or anything as the prefix, and the images will be stored as:

	graduation-1998128-1.jpg
	graduation-1998128-2.jpg
	...

	This is handy for archiving purposes, and to know what each
	image is.  The date stamp part uses YYYYMMDD ISO format, that
	was suggested by Jesper Skov (jskov@cygnus.co.uk).

	--------------------------------------------------------------

4.0.	GNU Photo developements

4.1.	Who has developed gPhoto?

	Read the AUTHORS file - or try "Help - Authors" in the gPhoto menu.

4.2.	How do I write a gPhoto-supported plugin or new model interfaces?

	Scott updates the generic camera library docs - see "PROGRAMMERS".

	It should be a snap for eager programmers to write gPhoto plugins, 
	and add support for more camera models, not supported by the great
	photopc library (by Eugene Crosser), through the generic interface.

	We would like to see more people contributing to the development.

	Send mail to (gphoto-devel@gphoto.org) if you want to help to
	implement plugins, add cam support or submit optimized lines!

4.3.	How do I organize a HTML gallery theme?

	When a user selects to make an HTML gallery, they must
	first have the index opened, and the images they want
	in the gallery selected.  Then, they type in the name of
	the gallery in a text entry, select a gallery theme,
	and specify the output directory.  It's possible to create
	your own special code, customized to your own heart's desire.

	Here are the 4 files that make up a gPhoto Gallery "Theme":

        /usr/share/gphoto/gallery/<theme name>/index_top.html
        /usr/share/gphoto/gallery/<theme name>/index_bottom.html
        /usr/share/gphoto/gallery/<theme name>/thumbnail.html
        /usr/share/gphoto/gallery/<theme name>/picture.html

	Any other files that are in the /usr/share/gphoto/gallery/<theme name>
	directory are copied directly to the output directory specified by the
	user, so you can place "button" images, and background images in
	the theme .html files, and it will be preserved in the gallery
	output... Java, images, javascript... you can use any of that in the
	gallery theme..

	Here are the gPhoto HTML engine tags:
                
		#GALLERY_NAME#          the name of the gallery
	        #GALLERY_INDEX#         page name of the thumbnail index
	        #DATE#                  current date
	        #THUMBNAIL#             thumbnail image w/link to picture
	        #THUMBNAIL_FILENAME#    name of thumbnail image
	        #THUMBNAIL_NUMBER#      number of the thumbnail
	        #PICTURE#               <img> tag w/picture
	        #PICTURE_FILENAME#      filename of picture
	        #PICTURE_NUMBER#        number of the picture
	        #PICTURE_NEXT#          next picture's html filename
	        #PICTURE_PREVIOUS#      previous picture's html filename

	Here are some examples:

	--- index_top.html ---
	(printed at the top of the index page)
        <html><title>Default Gallery Theme</title>
        <body>
        <h1>Welcome to the #GALLERY_NAME# HTML gallery.</h1>
        <p>Yes! this is extremely bland and boring, but is just an example of
        how to create gallery themes in gPhoto!
        <p>
        The following gallery was created on #DATE#:
        <p>

	--- index_bottom.html ---
	(printed at the bottom of the index page)
        <p>
        Please click on one of the images to view it, and then you can use
        the previous/next links to move between images.
        <hr>
        <i>name of this page: #GALLERY_INDEX#
        <br>gPhoto development team
        </body></html>

	--- thumbnail.html ---
	(this is placed in each thumbnail "cell" in the index table)

        <table>
        <tr><td>#THUMBNAIL#</td></tr>
        <tr><td>This is thumbnail #THUMBNAIL_NUMBER#</td></tr>
        <tr><td>Filename: #THUMBNAIL_FILENAME#</td></tr>
        </table>

	--- picture.html ---
	(printed in each of the pictures' individual full-size pages...)
	(notice how next/previous use .jpg images as links. they are copied 
	from the theme directory to the output directory automatically)

        <html><title>Picture #PICTURE_NUMBER# in #GALLERY_NAME#</title>
        <body>
        <a href="#PICTURE_PREVIOUS#"><img src="previous.jpg"></a>
        <a href="#PICTURE_NEXT#"><img src="next.jpg"></a>
        <a href="#GALLERY_INDEX#"><img src="index.jpg"></a>
        <p>
        #PICTURE#
        <p>
        Image Filename: #PICTURE_FILENAME#
        <p>
        <a href="#PICTURE_PREVIOUS#"><img src="previous.jpg"></a>
        <a href="#PICTURE_NEXT#"><img src="next.jpg"></a>
        <a href="#GALLERY_INDEX#"><img src="index.jpg"></a>
        <hr>
        <i>The default gPhoto Gallery
        </body></html>

4.4.	What are the future plans for GNU Photo?

	gPhoto is being actively developed, and version 1.0 will have
	many new features, and hopefully also support for more popular 
	camera models.

4.5.	Does gPhoto aim to be GNOME compliant?

	Yes, but we will include a plain GTK+ version in the main archive.
	ATM, gPhoto is not GNOME compliant, so it's not an issue, yet.
	
	Miguel de Icaza has welcomed gPhoto into GNOME cvs repository,
	so if you want to make it GNOME compliant, please mail the gphoto
	developers' list <gphoto-devel@gphoto.org> and make contributions.
	
4.6.	gPhoto is great! You could earn real money! But why is it *free*?

	gPhoto and everything you'll find in this archive comes under the
	GNU General Public License (GPL), which means the entire contents
	of this archive may be distributed freely - without any fees for 
	profit or not, as long as the source to this archive is made freely
	available to the public.  The contents of this archive may even be
	modified and then re-distributed freely, but all derivative works 
	also come under the same License agreement as do the modifications 
	made.  Please see the COPYING file in the source archive for a fully 
	detailed description of the GPL.

	http://www.gnu.org/copyleft/gpl.html

	Let's first thank Richard Stallman, who founded the GNU project in 
	1984, with the goal to create a complete and free operating system.

	Also thanks to Linus Torvalds for starting work on his Linux Kernel 
	and making it available for all to use on standard cheap PC hardware. 

	Also thanks goes to the entire Kernel devel team, and the rest of the 
	free software community, and to those people who volunteerly work on
	useful GNOME applications, the GIMP and it's tool kit, GTK+.

	http://www.gnu.org/
	http://www.kernel.org/
	http://www.gimp.org/
	http://www.gtk.org/

	Thanks a lot to Carsten "Raster" Haitzler for his work on the 
	imlib library, that gPhoto uses for many image operations.
