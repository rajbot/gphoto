dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gtkam, 0.1.3)
AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

CFLAGS="$CFLAGS -g -Wall -Wmissing-declarations -Wmissing-prototypes"
LDFLAGS="$LDFLAGS -g -Wall"

AM_PATH_GTK(1.2.0, ,
            AC_MSG_ERROR(Cannot find GTK: Is gtk-config in path?))

dnl Add the languages which your application supports here.
ALL_LINGUAS="da de es fr hu it ja no pt_BR pt_PT ru sl sv uk"
AM_GNU_GETTEXT

dnl Check for gPhoto2 configuration
AC_PATH_PROG(GPHOTO_CONFIG,gphoto2-config)
if test -n "${GPHOTO_CONFIG}"; then
  CFLAGS="$CFLAGS `$GPHOTO_CONFIG --cflags` `gphoto2-port-config --cflags`"
  LIBS="$LIBS `$GPHOTO_CONFIG --libs` `gphoto2-port-config --libs`"
else
  AC_MSG_ERROR([
***
*** gPhoto2 is required. Available from gPhoto's Sourceforge CVS.
*** Check http://www.gphoto.net/download.html for details
***])
  exit 1
fi

dnl Check for gdk-pixbuf configuration
AC_PATH_PROG(GDK_PIXBUF_CONFIG,gdk-pixbuf-config)
if test -n "${GDK_PIXBUF_CONFIG}"; then
  CFLAGS="$CFLAGS `$GDK_PIXBUF_CONFIG --cflags`"
  LIBS="$LIBS `$GDK_PIXBUF_CONFIG --libs`"
else
  AC_MSG_ERROR([
***
*** gdk-pixbuf (and headers) is required. Available from GNOME CVS.
*** Check http://www.gnome.org for details
***])
  exit 1
fi

dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}")
fi

dnl -----------
dnl GIMP plugin
dnl -----------
try_gimp=true
gimp_msg=no
have_gimp=false
AC_ARG_WITH(gimp, [  --without-gimp  Don't compile GIMP plugin],
	if test x$withval = xno; then
		try_gimp=false
	fi)
if $try_gimp; then
	AC_PATH_PROG(GIMP_CONFIG,gimptool)
	if test -n "${GIMP_CONFIG}"; then
		CPPFLAGS_save="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS `$GIMP_CONFIG --cflags`"
		AC_CHECK_HEADER(libgimp/gimp.h,
			have_gimp=true
			gimp_msg=yes
			AC_DEFINE(HAVE_GIMP)
			GIMP_CFLAGS="`$GIMP_CONFIG --cflags`"
			GIMP_LIBS="`$GIMP_CONFIG --libs`"
			GIMP_PLUGIN_DIR="`$GIMP_CONFIG --gimpplugindir`"
		)
		CPPFLAGS="$CPPFLAGS_save"
	fi
fi
AM_CONDITIONAL(HAVE_GIMP, $have_gimp)
AC_SUBST(GIMP_CFLAGS)
AC_SUBST(GIMP_LIBS)
AC_SUBST(GIMP_PLUGIN_DIR)

dnl ---------------------------------------------------------------------------
dnl libexif: When libexif(-gtk) is installed on the system, we are able
dnl          to display EXIF information.
dnl ---------------------------------------------------------------------------
exif_msg="no (http://www.sourceforge.net/projects/libexif)"
try_exif=true
have_exif=false
AC_ARG_WITH(exif, [  --without-exif          Don't use libexif],[
        if test x$withval = xno; then
                try_exif=false
        fi])
if $try_exif; then
        AC_PATH_PROG(PKG_CONFIG,pkg-config)
        if test -n "${PKG_CONFIG}"; then
                AC_MSG_CHECKING([for libexif-gtk])
                if ${PKG_CONFIG} --exists libexif-gtk > /dev/null 2>&1; then
                        EXIF_CFLAGS=`$PKG_CONFIG --cflags libexif-gtk`
                        EXIF_LIBS=`$PKG_CONFIG --libs libexif-gtk`
                        have_exif=true
                        exif_msg=yes
                        AC_DEFINE(HAVE_EXIF)
                fi
                AC_MSG_RESULT($exif_msg)
        fi
fi
AM_CONDITIONAL(HAVE_EXIF, $have_exif)
AC_SUBST(EXIF_CFLAGS)
AC_SUBST(EXIF_LIBS)

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")

if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(DOCDIR, "${ac_default_prefix}/doc/gtkam")
 else
  AC_DEFINE_UNQUOTED(DOCDIR, "${prefix}/doc/gtkam")
fi

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_OUTPUT([
Makefile
intl/Makefile
art/Makefile
pixmaps/Makefile
packaging/Makefile
packaging/rpm/Makefile
packaging/rpm/package.spec
src/Makefile
po/Makefile.in
])

echo "

Configuration

        Source code location: ${srcdir}
	Compiler:             ${CC}

	GIMP plugin:          $gimp_msg
	EXIF support:         $exif_msg
"
