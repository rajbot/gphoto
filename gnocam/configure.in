AC_INIT(src/gnocam.c)

AM_INIT_AUTOMAKE(GnoCam, 0.9)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)
AM_PROG_XML_I18N_TOOLS

dnl ******************
dnl Initialize libtool
dnl ******************
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CXX
AM_PROG_CC_STDC
AC_HEADER_STDC

GNOME_INIT
AM_PATH_GTK(1.2.7)
GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS
GNOME_XML_CHECK

dnl Add the languages which your application supports here.
ALL_LINGUAS="no"
AM_GNU_GETTEXT
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

dnl **********
dnl gnome-libs
dnl **********
AC_MSG_CHECKING(for gnome-libs >= 1.0.55)
if gnome-config --version > /dev/null 2>&1; then
    vers=`gnome-config --version | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 55; then
	AC_MSG_RESULT(found)
    else
	AC_MSG_ERROR([
*** You need at least gnome-libs 1.0.55 for this version of ${PACKAGE}.])
    fi
else
    AC_MSG_ERROR([
*** Did not find gnome-libs installed.])
fi

dnl ******
dnl bonobo
dnl ******
AC_MSG_CHECKING(for bonobo>=0.37)
if gnome-config --libs bonobox > /dev/null 2>&1; then
    vers=`gnome-config --modversion bonobo | awk 'BEGIN { FS = "."; } { printf "%d", $1 * 1000 + $2;}'`
        if test "$vers" -ge 37; then
            AC_MSG_RESULT(found)
        else
            AC_MSG_ERROR([
*** You need at least bonobo-0.37 for this version of ${PACKAGE}. 
*** Get the latest version from http://www.gnome.org. Mirrors can
*** be found at http://www.gnome.org/mirrors.])
        fi
else
    AC_MSG_ERROR([
*** You need bonobo for this version of ${PACKAGE}. Get the latest 
*** version from http://www.gnome.org. Mirrors can be found at
*** http://www.gnome.org/mirrors.]) 
fi

dnl ***
dnl gal
dnl ***
AC_MSG_CHECKING(for GAL)
if gnome-config --libs gal > /dev/null 2>&1; then
    AC_MSG_RESULT(found)
else
    AC_MSG_ERROR([
*** You need gal for this version of ${PACKAGE}. Get the latest
*** version from http://www.gnome.org. Mirrors can be found at
*** http://www.gnome.org/mirrors.])
fi

dnl *********
dnl gnome-vfs
dnl *********
AC_MSG_CHECKING(for vfs)
if gnome-config --libs vfs > /dev/null 2>&1; then
    AC_MSG_RESULT(found)
    VFS_LIBS="`gnome-config --libs vfs`"
    AC_SUBST(VFS_LIBS)
else
    AC_MSG_ERROR([
*** You need gnome-vfs for this version of ${PACKAGE}. Get the latest 
*** version from http://www.gnome.org. Mirrors can be found at 
*** http://www.gnome.org/mirrors.])
fi

dnl *********
dnl gnome-xml
dnl *********
AC_MSG_CHECKING(for gnome-xml >= 1.8.7)
if xml-config --version > /dev/null 2>&1; then
    vers=`xml-config --version | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 2000000; then
        AC_MSG_RESULT(found libxml2)
        AC_DEFINE(GNOCAM_USES_LIBXML2)
    else
        if test "$vers" -ge 1008010; then
            AC_MSG_RESULT(found)
        else
            AC_MSG_ERROR([
*** You need at least libxml-1.8.10 for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
        fi
    fi
else
    AC_MSG_ERROR([
*** You need libxml (gnome-xml) for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
fi

dnl ******************************
dnl GConf
dnl ******************************
AM_PATH_GCONF(0.12,,,gconf-gtk)

dnl ********
dnl libglade
dnl ********
AC_MSG_CHECKING(for Glade libraries >= 0.14)
if gnome-config --libs libglade > /dev/null 2>&1; then
    vers=`gnome-config --modversion libglade | awk 'BEGIN { FS = "."; } { print $1 * 1000 + $2;}'`
    if test "$vers" -ge 14; then
	AC_MSG_RESULT(found)
    else
	AC_MSG_ERROR([
*** You need a least libglade 0.14 for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
    fi
else
    AC_MSG_ERROR([
*** You need libglade for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
fi

dnl ******************************
dnl More compiler warnings
dnl ******************************
AC_ARG_ENABLE(more-warnings, [  --enable-more-warnings  Maximum compiler warnings], set_more_warnings="$enableval",[set_more_warnings=no])
warning_flags=
realsave_CFLAGS="$CFLAGS"
AC_MSG_CHECKING(for more warnings, including -Werror)
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
        AC_MSG_RESULT(yes)
        warning_flags="-Wall -Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Werror"
        CFLAGS="$warning_flags $CFLAGS"

        for option in -Wsign-promo -Wno-sign-compare; do
                SAVE_CFLAGS="$CFLAGS"
                CFLAGS="$CFLAGS $option"
                AC_MSG_CHECKING([whether gcc understands $option])
                AC_TRY_COMPILE([], [],
                        has_option=yes,
                        has_option=no,)
                CFLAGS="$SAVE_CFLAGS"
                AC_MSG_RESULT($has_option)
                if test $has_option = yes; then
                  warning_flags="$warning_flags $option"
                fi
                unset has_option
                unset SAVE_CFLAGS
        done
        unset option
else
        AC_MSG_RESULT(no)
fi
CFLAGS="$realsave_CFLAGS"
EXTRA_WARNING_CFLAGS="$warning_flags"
AC_SUBST(EXTRA_WARNING_CFLAGS)

dnl ******************************
dnl Check for OAF
dnl ******************************
AM_PATH_OAF(0.6.2)

AC_SUBST(OAF_LIBS)
AC_SUBST(OAF_CFLAGS)

dnl **********
dnl libgphoto2
dnl **********
AC_MSG_CHECKING(for libgphoto2 >= 2.0)
if gnome-config --libs libgphoto2 > /dev/null 2>&1; then
    AC_MSG_RESULT(found)
else
    AC_MSG_ERROR([
*** You need libgphoto2 for this version of ${PACKAGE}.
*** Get it from http://sourceforge.net/projects/gphoto/])
fi
GPHOTO_CFLAGS="`gphoto2-config --cflags` `gphoto2-port-config --cflags`"
GPHOTO_LIBS="`gphoto2-config --libs` `gphoto2-port-config --cflags`"
AC_SUBST(GPHOTO_CFLAGS)
AC_SUBST(GPHOTO_LIBS)

EXTRA_GNOME_CFLAGS=`gnome-config --cflags libglade bonobo bonobox bonobox_print gal vfs`
EXTRA_GNOME_LIBS=`gnome-config --libs libglade bonobo bonobox bonobox_print gal vfs`
AC_SUBST(EXTRA_GNOME_CFLAGS)
AC_SUBST(EXTRA_GNOME_LIBS)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl *********
dnl Makefiles
dnl *********
AC_OUTPUT([
gnocam.spec
Makefile
art/Makefile
idl/Makefile
intl/Makefile
macros/Makefile
po/Makefile.in
src/Makefile
bonobo-moniker/Makefile
bonobo-storage-module/Makefile
gnome-vfs-module/Makefile
libgnocam/Makefile
])

dnl *********************
dnl Give some feedback...
dnl *********************

echo "

***
I didn't check for an image or movie viewer. If you 
would like to view images or movies with ${PACKAGE}, 
you would probably like to install for example eog
for viewing images.
***

Configuration

	Source code location: ${srcdir}
	Compiler:             ${CC}
"
