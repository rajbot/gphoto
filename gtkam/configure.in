dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.50)
AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gtkam, 0.1.8)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

CFLAGS="$CFLAGS -g -Wall -Wmissing-declarations -Wmissing-prototypes"
LDFLAGS="$LDFLAGS -g -Wall"

dnl Add the languages which your application supports here.
ALL_LINGUAS="da de es fr hu it ja no pt_BR pt_PT ru sl sv uk"
AM_GNU_GETTEXT

dnl ---------------------------------------------------------------------------
dnl gtk
dnl ---------------------------------------------------------------------------
PKG_CHECK_MODULES(GTK, gtk+-2.0)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

dnl ---------------------------------------------------------------------------
dnl gphoto2
dnl ---------------------------------------------------------------------------
AC_PATH_PROG(GPHOTO_CONFIG,gphoto2-config)
if test -n "${GPHOTO_CONFIG}"; then
	GP_CFLAGS="`$GPHOTO_CONFIG --cflags` `gphoto2-port-config --cflags`"
	GP_LIBS="`$GPHOTO_CONFIG --libs` `gphoto2-port-config --libs`"
	LDFLAGS_save="$LDFLAGS"
	LDFLAGS="$GP_LIBS"
	AC_CHECK_LIB(gphoto2, gp_camera_set_timeout_funcs, [
		AC_DEFINE(HAVE_GP_CAMERA_SET_TIMEOUT_FUNCS,,[
			Whether to use new features of libgphoto2])])
	LDFLAGS="$LDFLAGS_save"
else
	AC_MSG_ERROR([
***
*** gPhoto2 is required. Available from gPhoto's Sourceforge CVS.
*** Check http://www.gphoto.net/download.html for details
***])
fi
AC_SUBST(GP_CFLAGS)
AC_SUBST(GP_LIBS)

dnl ---------------------------------------------------------------------------
dnl GIMP plugin
dnl ---------------------------------------------------------------------------
try_gimp=true
gimp_msg=no
have_gimp=false
AC_ARG_WITH(gimp, [  --without-gimp          Don't compile GIMP plugin],
	if test x$withval = xno; then
		try_gimp=false
	fi)
if $try_gimp; then
	AC_PATH_PROG(GIMPTOOL, gimptool-1.3, no)
	if test "$GIMPTOOL" = "no"; then
		gimp_msg="no (gimptool-1.3 not found)"
	else
		GIMP_CFLAGS=`$GIMPTOOL --cflags`
		GIMP_LIBS=`$GIMPTOOL --libs`
		GIMP_PLUGIN_DIR=`$GIMPTOOL --gimpplugindir`
		gimp_msg="yes"
		have_gimp=true
	fi
fi
AM_CONDITIONAL(HAVE_GIMP, $have_gimp)
AC_SUBST(GIMP_CFLAGS)
AC_SUBST(GIMP_LIBS)
AC_SUBST(GIMP_PLUGIN_DIR)

dnl ---------------------------------------------------------------------------
dnl libexif: When libexif(-gtk) is installed on the system, we are able
dnl          to display EXIF information.
dnl ---------------------------------------------------------------------------
exif_msg="no (http://www.sourceforge.net/projects/libexif)"
try_exif=true
have_exif=false
AC_ARG_WITH(exif, [  --without-exif          Don't use libexif],[
        if test x$withval = xno; then
                try_exif=false
        fi])
if $try_exif; then
        AC_PATH_PROG(PKG_CONFIG,pkg-config)
        if test -n "${PKG_CONFIG}"; then
                AC_MSG_CHECKING([for libexif-gtk])
                if ${PKG_CONFIG} --exists libexif-gtk > /dev/null 2>&1; then
                        EXIF_CFLAGS=`$PKG_CONFIG --cflags libexif-gtk`
                        EXIF_LIBS=`$PKG_CONFIG --libs libexif-gtk`
                        have_exif=true
                        exif_msg=yes
                        AC_DEFINE(HAVE_EXIF,,[Whether to use libexif])
                fi
                AC_MSG_RESULT($exif_msg)
        fi
fi
AM_CONDITIONAL(HAVE_EXIF, $have_exif)
AC_SUBST(EXIF_CFLAGS)
AC_SUBST(EXIF_LIBS)

dnl ---------------------------------------------------------------------------
dnl rpm: 
dnl
dnl      Note that if libusb-devel is installed, the gtkam-rpm will depend
dnl      on libusb and libusb-devel.
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(rpmbuild, [  --with-rpmbuild=PATH      Program to use for building RPMs])
AC_MSG_CHECKING([for rpmbuild or rpm])
if test -x "${with_rpmbuild}"; then
    RPMBUILD="${with_rpmbuild}"
    AC_MSG_RESULT([${RPMBUILD} (from parameter)])
    AC_SUBST(RPMBUILD)
else
    AC_MSG_RESULT([using autodetection])
    AC_CHECK_PROGS(RPMBUILD, [rpmbuild rpm], /bin/false)
    AC_MSG_RESULT([${RPMBUILD} (autodetect)])
fi
AM_CONDITIONAL(ENABLE_RPM, test "$RPMBUILD" != "/bin/false")
AM_CONDITIONAL(RPM_LIBUSB_DEVEL, rpm -q libusb-devel > /dev/null 2>&1)

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_OUTPUT([
Makefile
intl/Makefile
art/Makefile
pixmaps/Makefile
packaging/Makefile
packaging/rpm/Makefile
packaging/rpm/package.spec
src/Makefile
test/Makefile
po/Makefile.in
])

echo "

Configuration

        Source code location: ${srcdir}
	Compiler:             ${CC}

	GIMP plugin:          $gimp_msg
	EXIF support:         $exif_msg
"
