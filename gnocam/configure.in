AC_INIT(src/gnocam.c)

AM_INIT_AUTOMAKE(GnoCam, 0.7)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)

GNOME_INIT

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

GNOME_COMPILE_WARNINGS

dnl Add the languages which your application supports here.
ALL_LINGUAS="no"
AM_GNU_GETTEXT

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
    AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi

dnl **************
dnl Use threading?
dnl **************
AC_ARG_ENABLE(threads, [  --enable-threads        Use threading [default=no]],[use_threads=$enableval],[use_threads=no])
AC_MSG_CHECKING([whether to use threads])
if test x"$use_threads" = xyes; then
    AC_MSG_RESULT([yes])
    if test ! -z `glib-config 2>&1 |grep 'gthread'`; then
	THREAD_CFLAGS=`glib-config --cflags gthread`
	THREAD_LIBS=`glib-config --libs gthread`
	CFLAGS="$CFLAGS $THREAD_CFLAGS"
	LIBS="$LIBS $THREAD_LIBS"
	AC_DEFINE(GNOCAM_USES_THREADS,1)
    else
	AC_MSG_ERROR([
*** ${PACKAGE} requires GThread from GLib to use threading.])
    fi
else
    AC_MSG_RESULT([no])
fi

dnl **********
dnl gnome-libs
dnl **********
AC_MSG_CHECKING(for gnome-libs >= 1.0.55)
if gnome-config --version > /dev/null 2>&1; then
    vers=`gnome-config --version | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 55; then
	AC_MSG_RESULT(found)
    else
	AC_MSG_ERROR([
*** You need at least gnome-libs 1.0.55 for this version of ${PACKAGE}.])
    fi
else
    AC_MSG_ERROR([
*** Did not find gnome-libs installed.])
fi

dnl ************
dnl Use gtkhtml?
dnl ************
AC_ARG_ENABLE(gtkhtml, [  --enable-gtkhtml        Use gtkhtml [default=no]],[use_gtkhtml=$enableval],[use_gtkhtml=no])
AC_MSG_CHECKING([whether to use gtkhtml])
if test x"$use_gtkhtml" = xyes; then
    AC_MSG_RESULT([yes])
    if `test ! -z `gnome-config>&1 |grep gtkhtml>/dev/null``; then
dnl     ******
dnl     bonobo
dnl     ******
	AC_MSG_CHECKING(for bonobox)
	if gnome-config --libs bonobox > /dev/null 2>&1; then
	    AC_MSG_RESULT(found)
	else
	    AC_MSG_ERROR([
*** You need bonobo for this version of ${PACKAGE}. Get the latest 
*** version from http://www.gnome.org. Mirrors can be found at
*** http://www.gnome.org/mirrors. 
***
*** Alternatively, you can configure ${PACKAGE} without gtkhtml
*** enabled.])
	fi
        GTKHTML_CFLAGS="`gnome-config --cflags gtkhtml bonobox` `libglade-config --cflags bonobo`"
        GTKHTML_LIBS="`gnome-config --libs gtkhtml bonobox` `libglade-config --libs bonobo`"
        CFLAGS="$CFLAGS $GTKHTML_CFLAGS"
        LIBS="$LIBS $GTKHTML_LIBS"
        AC_DEFINE(GNOCAM_USES_GTKHTML,1)
        AM_CONDITIONAL(GNOCAM_USES_GTKHTML,true)
    else
        AC_MSG_ERROR([
*** You need to have gtkhtml installed to use it. Get the latest
*** version from http://www.gnome.org.])
    fi
else
    AC_MSG_RESULT([no])
    AM_CONDITIONAL(GNOCAM_USES_GTKHTML,false)
fi

dnl *********
dnl gnome-vfs
dnl *********
AC_MSG_CHECKING(for vfs)
if gnome-config --libs vfs > /dev/null 2>&1; then
    AC_MSG_RESULT(found)
else
    AC_MSG_ERROR([
*** You need gnome-vfs for this version of ${PACKAGE}. Get the latest 
*** version from http://www.gnome.org. Mirrors can be found at 
*** http://www.gnome.org/mirrors.])
fi

dnl *********
dnl gnome-xml
dnl *********
AC_MSG_CHECKING(for gnome-xml >= 1.8.7)
if xml-config --version > /dev/null 2>&1; then
    vers=`xml-config --version | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 2000000; then
        AC_MSG_RESULT(found libxml2)
        AC_DEFINE(GNOCAM_USES_LIBXML2)
    else
        if test "$vers" -ge 1008010; then
            AC_MSG_RESULT(found)
        else
            AC_MSG_ERROR([
*** You need at least libxml-1.8.10 for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
        fi
    fi
else
    AC_MSG_ERROR([
*** You need libxml (gnome-xml) for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
fi

dnl *****
dnl GConf
dnl *****
AC_MSG_CHECKING(for gconf >= 0.10)
if gconf-config --version > /dev/null 2>&1; then
    vers=`gconf-config --version | awk 'BEGIN { FS = "."; } { printf "%d", $1 * 1000 + $2;}'`
    if test "$vers" -ge 10; then
        AC_MSG_RESULT(found)
    else 
        AC_MSG_ERROR([
*** You need at least gconf-0.10 for this version of ${PACKAGE}. 
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
    fi
else
    AC_MSG_ERROR([
*** You need gconf for this version of ${PACKAGE}. Get the latest
*** version from http://www.gnome.org. Mirrors can be found at
*** http://www.gnome.org/mirrors.])
fi

dnl ***
dnl oaf
dnl ***
AC_MSG_CHECKING(for oaf >= 0.5.1)
if oaf-config --version > /dev/null 2>&1; then
    vers=`oaf-config --version | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 5001; then
        AC_MSG_RESULT(found)
    else 
	AC_MSG_ERROR([
*** You need at least oaf-0.5.1 for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
    fi
else
    AC_MSG_ERROR([
*** You need oaf for this versin of ${PACKAGE}. Get the latest
*** version from http://www.gnome.org. Mirrors can be found at 
*** http://www.gnome.org/mirrors.])
fi

dnl ********
dnl libglade
dnl ********
AC_MSG_CHECKING(for Glade libraries >= 0.14)
if gnome-config --libs libglade > /dev/null 2>&1; then
    vers=`gnome-config --modversion libglade | awk 'BEGIN { FS = "."; } { print $1 * 1000 + $2;}'`
    if test "$vers" -ge 14; then
	AC_MSG_RESULT(found)
    else
	AC_MSG_ERROR([
*** You need a least libglade 0.14 for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
    fi
else
    AC_MSG_ERROR([
*** You need libglade for this version of ${PACKAGE}.
*** Get the latest version from http://www.gnome.org.
*** Mirrors can be found at http://www.gnome.org/mirrors.])
fi

dnl *******
dnl libgpio
dnl *******
AC_MSG_CHECKING(for libgpio >= 0.0.2)
if gnome-config --libs gpio > /dev/null 2>&1; then
    vers=`gnome-config --modversion gpio | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 2; then
        AC_MSG_RESULT(found)
    else
        AC_MSG_ERROR([
*** You need at least libgpio 0.0.2 for this version of ${PACKAGE}.
*** Get it from http://sourceforge.net/projects/gphoto/])
    fi
else
    AC_MSG_ERROR([
*** You need libgpio for this version of ${PACKAGE}.
*** Get it from http://sourceforge.net/projects/gphoto/])
fi

dnl **********
dnl libgphoto2
dnl **********
AC_MSG_CHECKING(for libgphoto2 >= 2.0)
if gnome-config --libs libgphoto2 > /dev/null 2>&1; then
    AC_MSG_RESULT(found)
else
    AC_MSG_ERROR([
*** You need libgphoto2 for this version of ${PACKAGE}.
*** Get it from http://sourceforge.net/projects/gphoto/])
fi

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl *********
dnl Makefiles
dnl *********
AC_OUTPUT([
gnocam.spec
Makefile
doc/Makefile
doc/C/Makefile
intl/Makefile
macros/Makefile
po/Makefile.in
src/Makefile
src/stock/Makefile
])

dnl *********************
dnl Give some feedback...
dnl *********************

echo "

Configuration

	Source code location: ${srcdir}
	Compiler:             ${CC}
"
